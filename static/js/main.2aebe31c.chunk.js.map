{"version":3,"sources":["components/Navigation.js","fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDelete","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","stye","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","formatUser","fbaseUser","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aebe31c.chunk.js","sourcesContent":["import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { authService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState('');\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        // create Account\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password,\n        );\n      } else {\n        // Log In\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={onChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChange}\n          required\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? 'Create Account' : 'Log In'}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? 'Log In' : 'Create Account'}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import {\n  faGithub,\n  faGoogle,\n  faTwitter,\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from 'fbase';\nimport React from 'react';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"3x\" />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Google로 계속 하기 <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Github로 계속 하기 <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDelete = async () => {\n    const ok = window.confirm('정말 이 트윗을 지우시겠습니까?');\n\n    if (ok) {\n      // delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  onChange={onChange}\n                  required\n                  autoFocus\n                  className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"수정\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                취소\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"프로필\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDelete}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { dbService, storageService } from 'fbase';\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState('');\n  const [attachment, setAttachment] = useState('');\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    if (nweet === '') {\n      return;\n    }\n\n    // file upload and get url\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      await attachmentRef.putString(attachment, 'data_url');\n      attachmentUrl = await attachmentRef.getDownloadURL();\n    }\n\n    // new nweet object\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl: attachmentUrl,\n    };\n\n    // store at database\n    await dbService.collection('nweets').add(nweetObj);\n\n    setNweet('');\n    setAttachment('');\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment('');\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          onChange={onChange}\n          value={nweet}\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>사진 추가</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        stye={{ opacity: 0 }}\n      />\n\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{ backgroundImage: attachment }}\n            alt=\"프로필\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>제거</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import Nweet from 'components/Nweet';\nimport NweetFactory from 'components/NweetFactory';\nimport { dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection('nweets').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div style={{ marginTop: 30 }}>\n        <NweetFactory userObj={userObj} />\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst Profile = ({ refreshUser, userObj }) => {\n  const history = useHistory();\n\n  const [newDisplayName, setNewDisplayName] = useState(\n    userObj.displayName ? userObj.displayName : '',\n  );\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt', 'desc')\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    // 변경하려는 닉네임이 이전과 같다면 변경하지 않음\n    if (userObj.displayName === newDisplayName) return;\n\n    await userObj.updateProfile({ displayName: newDisplayName });\n    refreshUser();\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          type=\"text\"\n          onChange={onChange}\n          autoFocus\n          value={newDisplayName}\n          placeholder=\"Display name\"\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{ marginTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        로그아웃\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navigation from 'components/Navigation';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: '100%',\n              margin: '0 auto',\n              marginTop: 80,\n              display: 'flex',\n              justifyContent: 'center',\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  // Component Did Mount\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      setInit(true);\n      setUserObj(formatUser(user));\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // react는 state를 shallow comparison한다\n    // 구조 분해 할당시 함수는 들어오지 않나..? 확인해봐야함\n    const user = authService.currentUser;\n    setUserObj(formatUser(user));\n  };\n\n  const formatUser = (fbaseUser) => {\n    if (!fbaseUser) return null;\n\n    return {\n      uid: fbaseUser.uid,\n      displayName: fbaseUser.displayName,\n      updateProfile: (displayName) => fbaseUser.updateProfile(displayName),\n    };\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initializing...'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport reportWebVitals from 'reportWebVitals';\nimport fbase from 'fbase';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}